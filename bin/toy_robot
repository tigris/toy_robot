#!/usr/bin/env ruby

file   = __FILE__
file   = File.readlink(file) while File.symlink?(file) # Avoid putting same end path in load_path twice via symlinks
libdir = File.expand_path(File.join(File.dirname(file), '..', 'lib'))
$LOAD_PATH.unshift(libdir) unless $LOAD_PATH.include?(libdir)

require 'toy_robot'

def parse_command robot, command
  command = command.chomp
  args = case
    when command == 'LEFT'
      [:turn, :left]
    when command == 'RIGHT'
      [:turn, :right]
    when command == 'MOVE'
      :move
    when command == 'REPORT'
      :report
    when matches = command.match(/PLACE (?<x>\d),(?<y>\d),(?<direction>\w+)/)
      [:place, matches[:x].to_i, matches[:y].to_i, matches[:direction]]
    else
      raise ArgumentError.new("Invalid command: #{command}")
  end
  val = robot.send(*args)
  puts val if args == :report
end

robot = ToyRobot.new
File.readlines(ARGV[0]).each{|line| parse_command(robot, line) }
